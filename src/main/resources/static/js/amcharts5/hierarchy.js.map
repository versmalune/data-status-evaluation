{"version":3,"sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/HierarchyDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/BreadcrumbBar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/HierarchyNode.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/find.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/iterator.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Hierarchy.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/LinkedHierarchyNode.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/HierarchyLink.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/LinkedHierarchy.ts","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/lcg.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/simulation.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/add.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/quad.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/x.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/y.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/quadtree.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/constant.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/jiggle.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/collide.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/link.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/cover.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/data.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/extent.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/find.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/remove.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/root.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/size.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/visit.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/visitAfter.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/ForceDirected.ts","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/x.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/y.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/manyBody.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/pack/enclose.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/pack/siblings.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/array.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/accessors.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/constant.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/pack/index.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Pack.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/round.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/dice.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/partition.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Partition.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Sunburst.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/tree.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Tree.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/slice.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/index.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/binary.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Treemap.ts","webpack://@amcharts/amcharts5/./tmp/webpack/hierarchy.js"],"names":["setupDefaultRules","ic","this","_root","interfaceColors","gridLayout","r","rule","bind","setAll","legendLabelText","legendValueText","width","height","colors","ColorSet","step","downDepth","initialDepth","singleBranchOnly","maskContent","animationEasing","toggleKey","setStateOnChildren","position","isMeasured","cursorOverStyle","tooltipText","centerX","centerY","paddingBottom","paddingTop","paddingRight","paddingLeft","text","populateText","oversizedBehavior","minScale","strokeWidth","strokeOpacity","strength","distance","fillOpacity","radius","tooltipY","opacity","strokeDasharray","scale","interactive","states","create","layout","stateAnimationDuration","fontWeight","upDepth","visible","x","y","rotation","cornerRadiusBR","cornerRadiusTR","cornerRadiusBL","cornerRadiusTL","cornerRadius","textType","baseRadius","minRadius","maxRadius","initialFrames","centerStrength","manyBodyStrength","velocityDecay","linkWithStrength","showOnFrame","Infinity","topDepth","orientation","draggable","layoutAlgorithm","Theme","List","Template","Label","themeTags","labels","template","get","background","RoundedRectangle","dataItem","label","make","_setDataItem","events","on","series","selectDataItem","push","_defaultThemes","HierarchyDefaultTheme","new","_settings","_afterNew","_changed","isDirty","previous","_prevSettings","_disposer","event","_handleDataItem","dispose","set","children","clear","makeLabel","addTag","moveValue","Container","BreadcrumbBar","className","disabled","disableDataItem","enableDataItem","_clickDisposer","_isDragging","HierarchyNode","count","node","sum","i","length","value","hierarchy","data","Map","undefined","mapChildren","objectChildren","child","childs","n","root","Node","nodes","pop","Array","from","parent","depth","eachBefore","computeHeight","d","isArray","copyData","prototype","constructor","eachAfter","each","callback","that","index","call","next","find","sort","compare","path","end","start","ancestor","a","b","aNodes","ancestors","bNodes","c","leastCommonAncestor","k","splice","descendants","leaves","links","source","target","copy","Symbol","iterator","current","reverse","_tag","childData","setRaw","nodesContainer","fields","bulletsContainer","_prepareChildren","_valuesDirty","_treeData","first","dataItems","_makeHierarchyData","_index","_rootNode","setPrivateRaw","_updateValues","_sizeDirty","_updateVisuals","_selectDataItem","_currentDownDepth","_updateNodes","hierarchyNode","_updateNode","bullets","_makeBullets","hierarchyChildren","hierarchyChild","_dataItem","id","di","childDataItem","_getDataItemById","bullet","_handleBullets","reset","processDataItem","makeNode","_processDataItem","_makeDataItem","d3HierarchyNode","getPrivate","dataValue","updateLegendValue","d3HierarchyChild","disposeDataItem","removeValue","duration","promises","hideDataItem","hiddenState","stateAnimationEasing","easing","animate","key","to","waitForStop","hide","Promise","all","showDataItem","show","maxDepth","isHidden","applyAnimate","type","dispatch","Math","min","inited","currentDepth","_handleSingle","_zoom","bulletFunction","_makeBullet","sprite","_positionBullet","locationX","locationY","hover","unhover","Series","Hierarchy","link","_updateLinks","_onHide","_onShow","classNames","concat","LinkedHierarchyNode","_clear","sourceNode","targetNode","_display","moveTo","lineTo","_beforeChanged","_markDirtyKey","Graphics","HierarchyLink","Circle","C","circles","outerCircles","circle","setPrivate","outerCircle","maxWidth","maxHeight","_handleRadiusChange","parentDataItem","linkDataItems","updateLinkWith","linkWith","linkWithDataItem","point","_getPoint","fill","_setDefault","sourceLinks","lnk","targetLinks","linksContainer","_processLink","_disposeLink","_handleUnlink","linked","_link","_source","_target","LinkedHierarchy","m","initialAngle","PI","sqrt","simulation","alpha","alphaMin","alphaDecay","pow","alphaTarget","forces","stepper","timer","random","s","lcg","tick","stop","iterations","forEach","force","fx","vx","fy","vy","initializeNodes","isNaN","angle","cos","sin","initializeForce","initialize","restart","_","arguments","randomSource","name","delete","dx","dy","d2","closest","tree","xm","ym","xp","yp","right","bottom","j","leaf","x0","_x0","y0","_y0","x1","_x1","y1","_y1","_x","_y","defaultX","defaultY","quadtree","Quadtree","NaN","addAll","leaf_copy","treeProto","radii","xi","yi","ri","ri2","visitAfter","prepare","visit","apply","quad","rj","l","jiggle","constant","_nodes","_random","nodeById","nodeId","Error","strengths","distances","bias","map","initializeStrength","initializeDistance","add","cover","xz","yz","floor","z","extent","x2","y2","q","x3","y3","quads","remove","retainer","removeAll","size","d3forceSimulation","_tick","updateNodePositions","_updateForces","d3ForceNode","innerWidth","innerHeight","_nodesDirty","markDirty","collisionForce","linkForce","_links","restartSimulation","_updateChildren","w","max","h","pt","pl","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","distanceMin","distanceMax","theta","d3node","_clearDirty","linkDatum","getDistance","getStrength","d3Nodes","d3Node","sourceDataItem","targetDataItem","_updateRadius","valueWorking","d3Link","ForceDirected","extendBasis","B","p","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","enclosesWeak","encloseBasis","r1","r2","x21","y21","r21","r3","a2","a3","b2","b3","c2","c3","d1","d3","ab","xa","xb","ya","yb","A","place","intersects","score","packEnclose","array","aa","ca","sj","sk","pack","e","t","shuffle","enclose","optional","f","required","constantZero","defaultRadius","padding","radiusLeaf","packChildren","translateChild","isPrivateDirty","_updateNodesScale","packLayout","_packLayout","scaleR","animatePrivate","Pack","round","partition","positionNode","rectangles","partitionLayout","_partitionLayout","nodePadding","rectangle","scaleX","scaleY","_makeNode","levelHeight","levelWidth","Partition","Slice","slices","RadialLabel","bounds","wr","left","hr","top","ir","hs","slice","startAngle","endAngle","sliceStartAngle","arc","sliceInnerRadius","sliceRadius","innerRadius","_updateLabel","labelAngle","scaleDepth","Sunburst","defaultSeparation","nextLeft","v","nextRight","moveSubtree","wm","wp","shift","change","nextAncestor","vim","TreeNode","separation","nodeSize","treeRoot","firstWalk","secondWalk","sizeNode","tx","kx","ky","siblings","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","Object","_hierarchyLayout","Tree","custom","ratio","squarify","row","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","rows","i0","i1","dice","squarifyRatio","tile","paddingStack","paddingInner","treemap","paddingOuter","sums","valueOffset","valueTarget","hi","mid","valueLeft","valueRight","xk","yk","algorithm","_treemapLayout","treemapLayout","nodePaddingOuter","Treemap","am5hierarchy"],"mappings":"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","file":"hierarchy.js","sourcesContent":["import { Theme } from \"../../core/Theme\";\r\nimport { percent, p100, p50 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $ease from \"../../core/util/Ease\";\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class HierarchyDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst gridLayout = this._root.gridLayout;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/hierarchy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"Hierarchy\").setAll({\r\n\t\t\tlegendLabelText: \"{category}\",\r\n\t\t\tlegendValueText: \"{sum.formatNumber('#.#')}\",\r\n\t\t\twidth: p100,\r\n\t\t\theight: p100,\r\n\t\t\tcolors: ColorSet.new(this._root, { step: 2 }),\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\tsingleBranchOnly: true,\r\n\t\t\tmaskContent: true,\r\n\t\t\tanimationEasing: $ease.out($ease.cubic)\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\").setAll({\r\n\t\t\ttoggleKey: \"disabled\",\r\n\t\t\tsetStateOnChildren: true,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\tcursorOverStyle: \"pointer\",\r\n\t\t\ttooltipText: \"{category}: {sum}\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"hierarchy\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingRight: 4,\r\n\t\t\t\tpaddingLeft: 4,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.3\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"HierarchyLink\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrength: 0.9,\r\n\t\t\t\tdistance: 1.1\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tfillOpacity: 1,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tradius: 15,\r\n\t\t\ttooltipY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\topacity: 1,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tstrokeDasharray: 0,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tradius: 15,\r\n\t\t\tscale: 1.1,\r\n\t\t\tinteractive: false\r\n\t\t})\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"disabled\", { opacity: 1, scale: 1.1, strokeDasharray: 2 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hoverDisabled\", { scale: 1.2, opacity: 1, strokeDasharray: 2 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hover\", { scale: 1.05, strokeDasharray: 0 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hidden\", { opacity: 0, strokeDasharray: 0 });\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: BreadcrumbBar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"BreadcrumbBar\").setAll({\r\n\t\t\tpaddingLeft: 8,\r\n\t\t\tlayout: gridLayout\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tpaddingRight: 4,\r\n\t\t\t\tpaddingLeft: 4,\r\n\t\t\t\tcursorOverStyle: \"pointer\",\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}:\",\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]).states.create(\"hover\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\", \"last\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\tcursorOverStyle: \"default\"\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"breadcrumb\", \"label\", \"background\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Partition\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Partition\").setAll({\r\n\t\t\tdownDepth: 1,\r\n\t\t\tupDepth: 0,\r\n\t\t\tinitialDepth: 5\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"partition\"]).setAll({\r\n\t\t\tsetStateOnChildren: false\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"partition\"]).states.create(\"hidden\", {\r\n\t\t\topacity: 1,\r\n\t\t\tvisible: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"partition\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: p50,\r\n\t\t\t\ty: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\trotation: 90,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\tr(\"Label\", [\"horizontal\", \"partition\", \"node\"]).setAll({\r\n\t\t\trotation: 0\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"partition\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadiusBR: 0,\r\n\t\t\t\tcornerRadiusTR: 0,\r\n\t\t\t\tcornerRadiusBL: 0,\r\n\t\t\t\tcornerRadiusTL: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"RoundedRectangle\", [\"partition\", \"node\", \"shape\", \"last\"]).setAll({\r\n\t\t\tfillOpacity: 0.75\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Sunburst\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Sunburst\").setAll({\r\n\t\t\tsingleBranchOnly: true\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"sunburst\"]).setAll({\r\n\t\t\tsetStateOnChildren: false\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"sunburst\"]).states.create(\"hidden\", {\r\n\t\t\topacity: 0,\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Slice\", [\"sunburst\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadius: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"Slice\", [\"sunburst\", \"node\", \"shape\", \"last\"]).setAll({\r\n\t\t\tfillOpacity: 0.75\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RadialLabel\", [\"sunburst\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\ttextType: \"radial\",\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4,\r\n\t\t\t\tbaseRadius: p50,\r\n\t\t\t\trotation: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: ForceDirected\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"ForceDirected\").setAll({\r\n\t\t\tminRadius: percent(1),\r\n\t\t\tmaxRadius: percent(8),\r\n\t\t\tinitialFrames: 500,\r\n\t\t\tcenterStrength: 0.8,\r\n\t\t\tmanyBodyStrength: -14,\r\n\t\t\tvelocityDecay: 0.5,\r\n\t\t\tlinkWithStrength: 0.5,\r\n\t\t\tshowOnFrame: 10,\r\n\t\t\tsingleBranchOnly: false,\r\n\t\t\tupDepth: Infinity,\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\ttopDepth: 0\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Tree\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Tree\").setAll({\r\n\t\t\torientation: \"vertical\",\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 20,\r\n\t\t\tpaddingBottom: 20,\r\n\t\t\tsingleBranchOnly: false,\r\n\t\t\tupDepth: Infinity,\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\ttopDepth: 0\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Pack\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Pack\").setAll({\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingTop: 20,\r\n\t\t\tpaddingBottom: 20,\r\n\t\t\tpaddingRight: 20\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"pack\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Circle\", [\"pack\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tfillOpacity: 0.8,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"LinkedHierarchyNode\").setAll({\r\n\t\t\tdraggable: true\r\n\t\t});\r\n\r\n\t\tr(\"LinkedHierarchyNode\").states.create(\"hidden\", { scale: 0, opacity: 0, visible: false });\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Treemap\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Treemap\").setAll({\r\n\t\t\tupDepth: 0,\r\n\t\t\tlayoutAlgorithm: \"squarify\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"treemap\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: p50,\r\n\t\t\t\ty: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\tr(\"HierarchyNode\", [\"treemap\", \"node\"]).setAll({\r\n\t\t\ttooltipY: percent(40),\r\n\t\t\tisMeasured: false,\r\n\t\t\tposition: \"absolute\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"treemap\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadiusBR: 0,\r\n\t\t\t\tcornerRadiusTR: 0,\r\n\t\t\t\tcornerRadiusBL: 0,\r\n\t\t\t\tcornerRadiusTL: 0,\r\n\t\t\t\tfillOpacity: 1\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t}\r\n}\r\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { Hierarchy, IHierarchyDataItem } from \"./Hierarchy\";\n\nimport { HierarchyDefaultTheme } from \"./HierarchyDefaultTheme\";\nimport { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IBreadcrumbBarSettings extends IContainerSettings {\n\n\t/**\n\t * A hierarchy series bar will use to build current selection path.\n\t */\n\tseries: Hierarchy;\n\n}\n\nexport interface IBreadcrumbBarPrivate extends IContainerPrivate {\n}\n\nexport interface IBreadcrumbBarEvents extends IContainerEvents {\n}\n\n/**\n * Creates a breadcrumb navigation control.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/breadcrumbs/} for more info\n * @important\n */\nexport class BreadcrumbBar extends Container {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IHierarchyDataItem>): Label {\n\t\tconst label = this.labels.make();\n\t\tlabel._setDataItem(dataItem);\n\t\tlabel.states.create(\"hover\", {});\n\t\tlabel.states.create(\"down\", {});\n\t\tlabel.events.on(\"click\", () => {\n\t\t\tconst series = this.get(\"series\");\n\t\t\tif (series) {\n\t\t\t\tseries.selectDataItem(dataItem);\n\t\t\t}\n\t\t});\n\n\t\tthis.labels.push(label);\n\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the bar.\n\t *\n\t * `labels.template` can be used to configure label apperance and behavior.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"label\"]),\n\t\t\tbackground: RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: [\"background\"]\n\t\t\t})\n\t\t}, [this.labels.template])\n\t);\n\n\tpublic static className: string = \"BreadcrumbBar\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([BreadcrumbBar.className]);\n\n\tdeclare public _settings: IBreadcrumbBarSettings;\n\tdeclare public _privateSettings: IBreadcrumbBarPrivate;\n\tdeclare public _events: IBreadcrumbBarEvents;\n\n\tprotected _disposer: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(HierarchyDefaultTheme.new(this._root));\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"breadcrumb\"]);\n\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"series\")) {\n\t\t\tconst series = this.get(\"series\");\n\t\t\tconst previous = this._prevSettings.series;\n\t\t\tif (series != previous) {\n\t\t\t\tthis._disposer = series.events.on(\"dataitemselected\", (event) => {\n\t\t\t\t\tthis._handleDataItem(event.dataItem)\n\t\t\t\t})\n\t\t\t}\n\t\t\telse if (previous) {\n\t\t\t\tif (this._disposer) {\n\t\t\t\t\tthis._disposer.dispose();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._handleDataItem(series.get(\"selectedDataItem\"));\n\t\t}\n\t}\n\n\tprotected _handleDataItem(dataItem: DataItem<IHierarchyDataItem> | undefined) {\n\t\tthis.set(\"minHeight\", this.height());\n\t\tthis.children.clear();\n\t\tthis.labels.clear();\n\n\t\tif (dataItem) {\n\t\t\tlet parent = dataItem;\n\n\t\t\twhile (parent) {\n\t\t\t\tlet label = this.makeLabel(parent);\n\t\t\t\tif (parent == dataItem) {\n\t\t\t\t\tlabel.addTag(\"last\");\n\t\t\t\t}\n\t\t\t\tthis.children.moveValue(label, 0);\n\t\t\t\tparent = parent.get(\"parent\");\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { Hierarchy, IHierarchyDataItem } from \"./Hierarchy\";\n\nimport { Container, IContainerPrivate, IContainerSettings } from \"../../core/render/Container\";\n\nexport interface IHierarchyNodeSettings extends IContainerSettings {\n}\n\nexport interface IHierarchyNodePrivate extends IContainerPrivate {\n}\n\n/**\n * Base class for hierarchy nodes.\n */\nexport class HierarchyNode extends Container {\n\n\t/**\n\t * Related series.\n\t */\n\tpublic series: Hierarchy | undefined;\n\n\tdeclare public _settings: IHierarchyNodeSettings;\n\tdeclare public _privateSettings: IHierarchyNodePrivate;\n\n\tpublic static className: string = \"HierarchyNode\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([HierarchyNode.className]);\n\n\tdeclare protected _dataItem: DataItem<IHierarchyDataItem> | undefined;\n\n\tprotected _clickDisposer: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.states.create(\"disabled\", {});\n\t\tthis.states.create(\"hover\", {});\n\t\tthis.states.create(\"hoverDisabled\", {});\n\n\t\tthis.on(\"disabled\", () => {\n\t\t\tconst dataItem = this.dataItem as DataItem<IHierarchyDataItem>;\n\t\t\tif (!dataItem.get(\"children\")) {\n\t\t\t\tthis.set(\"disabled\", true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst disabled = this.get(\"disabled\");\n\t\t\tconst series = this.series;\n\n\t\t\tif (dataItem && series) {\n\t\t\t\tif (dataItem.get(\"disabled\") != disabled) {\n\t\t\t\t\tif (disabled) {\n\t\t\t\t\t\tseries.disableDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.enableDataItem(dataItem, series.get(\"downDepth\", 1), 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"toggleKey\")) {\n\t\t\tconst toggleKey = this.get(\"toggleKey\");\n\n\t\t\tif (toggleKey == \"disabled\") {\n\t\t\t\tthis._clickDisposer = this.events.on(\"click\", () => {\n\t\t\t\t\tif (!this._isDragging) {\n\t\t\t\t\t\tlet series = this.series;\n\t\t\t\t\t\tif (series) {\n\t\t\t\t\t\t\tseries.selectDataItem(this.dataItem as DataItem<IHierarchyDataItem>);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._clickDisposer) {\n\t\t\t\t\tthis._clickDisposer.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","import type { Color } from \"../../core/util/Color\";\nimport type { ColorSet } from \"../../core/util/ColorSet\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { Root } from \"../../core/Root\";\nimport type { Easing } from \"../../core/util/Ease\";\n\nimport { HierarchyDefaultTheme } from \"./HierarchyDefaultTheme\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\nimport { DataItem } from \"../../core/render/Component\";\nimport { HierarchyNode } from \"./HierarchyNode\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\n/**\n * @ignore\n */\nexport interface IHierarchyDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IHierarchyDataObject[],\n\tdataItem?: DataItem<IHierarchyDataItem>\n\tcustomValue?: boolean;\n};\n\nexport interface IHierarchyDataItem extends ISeriesDataItem {\n\tvalue: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorking: number;\n\n\tvaluePercentTotal: number;\n\tsum: number;\n\tcategory: string;\n\tchildren: Array<DataItem<IHierarchyDataItem>>;\n\tchildData: Array<any>\n\tparent: DataItem<IHierarchyDataItem>;\n\tdepth: number;\n\tnode: HierarchyNode;\n\tlabel: Label;\n\tfill: Color;\n\tdisabled: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>;\n}\n\nexport interface IHierarchySettings extends ISeriesSettings {\n\t/**\n\t * How to sort nodes by their value.\n\t *\n\t * @default \"none\"\n\t */\n\tsort?: \"ascending\" | \"descending\" | \"none\"\n\n\n\t/**\n\t * A field in data that holds numeric value for the node.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * A field in data that holds string-based identificator for node.\n\t */\n\tcategoryField?: string;\n\n\t/**\n\t * A field in data that holds an array of child node data.\n\t */\n\tchildDataField?: string;\n\n\t/**\n\t * A field in data that holds boolean value indicating if node is\n\t * disabled (collapsed).\n\t */\n\tdisabledField?: string;\n\n\t/**\n\t * A field in data that holds color used for fills for various elements, such\n\t * as nodes.\n\t */\n\tfillField?: string;\n\n\t/**\n\t * A [[ColorSet]] to use when asigning colors for nodes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Node_colors} for more info\n\t */\n\tcolors?: ColorSet;\n\n\t/**\n\t * Number of child levels to open when clicking on a node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Drill_down} for more info\n\t */\n\tdownDepth?: number;\n\n\t/**\n\t * Number of levels parent levels to show from currently selected node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Drill_down} for more info\n\t */\n\tupDepth?: number;\n\n\t/**\n\t * Number of levels to show on chart's first load.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Tree_depth} for more info\n\t */\n\tinitialDepth?: number;\n\n\t/**\n\t * If set, will show nodes starting from set level.\n\t *\n\t * It could be used to eliminate top level branches, that do not need to be\n\t * shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Tree_depth} for more info\n\t */\n\ttopDepth?: number;\n\n\t/**\n\t * If set to `true` will make all other branches collapse when some branch is\n\t * expanded.\n\t */\n\tsingleBranchOnly?: boolean;\n\n\t/**\n\t * A data item for currently selected node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Pre_selected_branch} for more info\n\t */\n\tselectedDataItem?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Duration for all drill animations in milliseconds.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * An easing function to use for drill animations.\n\t */\n\tanimationEasing?: Easing;\n\n}\n\nexport interface IHierarchyPrivate extends ISeriesPrivate {\n\n\t/**\n\t * Level count in series.\n\t */\n\tmaxDepth: number;\n\n}\n\nexport interface IHierarchyEvents extends ISeriesEvents {\n\tdataitemselected: {\n\t\tdataItem?: DataItem<IHierarchyDataItem>\n\t};\n}\n\n/**\n * A base class for all hierarchy charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/} for more info\n */\nexport abstract class Hierarchy extends Series {\n\tpublic static className: string = \"Hierarchy\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([Hierarchy.className]);\n\n\tdeclare public _settings: IHierarchySettings;\n\tdeclare public _privateSettings: IHierarchyPrivate;\n\tdeclare public _dataItemSettings: IHierarchyDataItem;\n\tdeclare public _events: IHierarchyEvents;\n\n\t/**\n\t * A [[Container]] that nodes are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly nodesContainer = this.children.push(Container.new(this._root, { isMeasured: false }));\n\n\tpublic _rootNode: d3hierarchy.HierarchyNode<IHierarchyDataObject> | undefined;\n\n\tpublic _treeData: IHierarchyDataObject | undefined;\n\n\tprotected _index: number = 0;\n\n\tprotected _tag: string = \"hierarchy\";\n\n\t/**\n\t * A list of nodes in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<HierarchyNode>\n\t */\n\tpublic readonly nodes: ListTemplate<HierarchyNode> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => HierarchyNode.new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\"])\n\t\t}, this.nodes.template)\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\n\t\tconst childData = dataItem.get(\"childData\");\n\n\t\tconst node = this.nodes.make();\n\t\tnode.series = this;\n\t\tnode._setDataItem(dataItem);\n\t\tthis.nodes.push(node);\n\t\tdataItem.setRaw(\"node\", node);\n\n\t\tconst label = this.labels.make();\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\n\t\tif (!childData || childData.length == 0) {\n\t\t\tnode.addTag(\"last\");\n\t\t}\n\n\t\tconst depth = dataItem.get(\"depth\");\n\t\tnode.addTag(\"depth\" + depth);\n\n\t\tthis.nodesContainer.children.push(node);\n\t\tnode.children.push(label);\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * A list of label elements in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label.new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [this._tag])\n\t\t}, this.labels.template)\n\t);\n\n\tpublic _currentDownDepth: number | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(HierarchyDefaultTheme.new(this._root));\n\t\tthis.fields.push(\"category\", \"childData\", \"disabled\", \"fill\");\n\n\t\tthis.children.push(this.bulletsContainer);\n\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this._valuesDirty) {\n\t\t\tthis._treeData = {};\n\n\t\t\tconst first = this.dataItems[0];\n\t\t\tif (first) {\n\t\t\t\tthis._makeHierarchyData(this._treeData, first);\n\t\t\t\tthis._index = 0;\n\t\t\t\tthis._rootNode = (d3hierarchy.hierarchy(this._treeData) as any);\n\t\t\t\tif (this._rootNode) {\n\t\t\t\t\tthis._rootNode.sum((d) => {\n\t\t\t\t\t\treturn d.value as any;\n\t\t\t\t\t});\n\t\t\t\t\tconst sort = this.get(\"sort\")\n\t\t\t\t\tif (sort == \"descending\") {\n\t\t\t\t\t\tthis._rootNode.sort((a, b) => (b.value as any) - (a.value as any));\n\t\t\t\t\t}\n\t\t\t\t\telse if (sort == \"ascending\") {\n\t\t\t\t\t\tthis._rootNode.sort((a, b) => (a.value as any) - (b.value as any));\n\t\t\t\t\t}\n\t\t\t\t\tthis.setPrivateRaw(\"valueLow\", Infinity);\n\t\t\t\t\tthis.setPrivateRaw(\"valueHigh\", -Infinity);\n\t\t\t\t\tthis.setPrivateRaw(\"maxDepth\", 0);\n\t\t\t\t\tthis._updateValues(this._rootNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty || this._sizeDirty) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\n\t\tif (this._sizeDirty) {\n\t\t\tthis._selectDataItem(this.get(\"selectedDataItem\"), this._currentDownDepth);\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"selectedDataItem\")) {\n\t\t\tthis._selectDataItem(this.get(\"selectedDataItem\"));\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNodes(hierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\n\t\tif (dataItem) {\n\t\t\tthis._updateNode(dataItem);\n\n\t\t\tif (this.bullets.length > 0 && !dataItem.bullets) {\n\t\t\t\tthis._makeBullets(dataItem);\n\t\t\t}\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodes(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateNode(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\tpublic _getDataItemById(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>, id: string): DataItem<this[\"_dataItemSettings\"]> | undefined {\n\n\t\tlet di: DataItem<this[\"_dataItemSettings\"]> | undefined;\n\n\t\t$array.each(dataItems, (dataItem: any) => {\n\n\t\t\tif (dataItem.get(\"id\") == id) {\n\t\t\t\tdi = dataItem;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tlet childDataItem = this._getDataItemById(children, id);\n\t\t\t\tif (childDataItem) {\n\t\t\t\t\tdi = childDataItem\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\treturn di;\n\t}\n\n\tprotected _handleBullets(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets) {\n\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\tbullet.dispose();\n\t\t\t\t})\n\t\t\t\tdataItem.bullets = undefined;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\n\t\t\tif (children) {\n\t\t\t\tthis._handleBullets(children);\n\t\t\t}\n\t\t})\n\n\t\tthis._updateVisuals();\n\t}\n\n\tprotected _onDataClear() {\n\t\tconst colors = this.get(\"colors\");\n\t\tif (colors) {\n\t\t\tcolors.reset();\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst childData = dataItem.get(\"childData\");\n\t\tconst colors = this.get(\"colors\");\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\tif (!dataItem.get(\"parent\")) {\n\t\t\tdataItem.setRaw(\"depth\", 0);\n\t\t\tif (colors && topDepth == 0 && dataItem.get(\"fill\") == null) {\n\t\t\t\tdataItem.setRaw(\"fill\", colors.next());\n\t\t\t}\n\t\t}\n\n\t\tlet depth = dataItem.get(\"depth\");\n\t\tconst initialDepth = this.get(\"initialDepth\", 1);\n\n\t\tthis.makeNode(dataItem);\n\t\tthis._processDataItem(dataItem);\n\n\t\tif (childData) {\n\t\t\tconst children: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\t\t\tdataItem.setRaw(\"children\", children);\n\n\t\t\t$array.each(childData, (child) => {\n\t\t\t\tconst childDataItem = new DataItem(this, child, this._makeDataItem(child));\n\n\t\t\t\tchildren.push(childDataItem);\n\n\t\t\t\tchildDataItem.setRaw(\"parent\", dataItem);\n\t\t\t\tchildDataItem.setRaw(\"depth\", depth + 1);\n\n\t\t\t\tif (this.dataItems.length == 1 && depth == 0) {\n\t\t\t\t\tif (colors && childDataItem.get(\"fill\") == null) {\n\t\t\t\t\t\tchildDataItem.setRaw(\"fill\", colors.next());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchildDataItem.setRaw(\"fill\", dataItem.get(\"fill\"));\n\t\t\t\t}\n\n\t\t\t\tthis.processDataItem(childDataItem);\n\t\t\t})\n\t\t}\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (!children || children.length == 0) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tnode.setAll({ toggleKey: undefined, cursorOverStyle: \"default\" });\n\t\t}\n\n\t\tif (dataItem.get(\"disabled\") == null) {\n\t\t\tif (depth >= topDepth + initialDepth) {\n\t\t\t\tthis.disableDataItem(dataItem, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\tprotected _updateValues(d3HierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>) {\n\t\tconst dataItem = d3HierarchyNode.data.dataItem;\n\n\t\tif (d3HierarchyNode.depth > this.getPrivate(\"maxDepth\")) {\n\t\t\tthis.setPrivateRaw(\"maxDepth\", d3HierarchyNode.depth);\n\t\t}\n\n\t\tif (dataItem) {\n\t\t\tdataItem.setRaw(\"d3HierarchyNode\", d3HierarchyNode);\n\n\t\t\t(d3HierarchyNode as any).index = this._index;\n\n\t\t\tthis._index++;\n\n\t\t\tdataItem.get(\"node\").set(\"disabled\", dataItem.get(\"disabled\"));\n\n\t\t\tlet dataValue = d3HierarchyNode.data.value;\n\t\t\tlet value = d3HierarchyNode.value\n\n\t\t\tif (dataValue != null) {\n\t\t\t\tvalue = dataValue;\n\t\t\t\t(d3HierarchyNode as any)[\"value\"] = value;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdataItem.setRaw(\"sum\", value);\n\n\t\t\t\tif (this.getPrivate(\"valueLow\") > value) {\n\t\t\t\t\tthis.setPrivateRaw(\"valueLow\", value);\n\t\t\t\t}\n\n\t\t\t\tif (this.getPrivate(\"valueHigh\") < value) {\n\t\t\t\t\tthis.setPrivateRaw(\"valueHigh\", value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.updateLegendValue(dataItem);\n\t\t}\n\n\t\tconst hierarchyChildren = d3HierarchyNode.children;\n\t\tif (hierarchyChildren) {\n\t\t\t$array.each(hierarchyChildren, (d3HierarchyChild) => {\n\t\t\t\tthis._updateValues(d3HierarchyChild);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _makeHierarchyData(data: IHierarchyDataObject, dataItem: DataItem<IHierarchyDataItem>) {\n\t\tdata.dataItem = dataItem;\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\tconst childrenDataArray: Array<IHierarchyDataObject> = [];\n\t\t\tdata.children = childrenDataArray;\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tconst childData = {};\n\t\t\t\tchildrenDataArray.push(childData);\n\t\t\t\tthis._makeHierarchyData(childData, childDataItem);\n\t\t\t})\n\n\t\t\tconst value = dataItem.get(\"valueWorking\");\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdata.value = value;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst value = dataItem.get(\"valueWorking\");\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdata.value = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tthis.nodes.removeValue(node);\n\t\t\tnode.dispose();\n\t\t}\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\t$array.each(children, (child) => {\n\t\t\t\tthis.disposeDataItem(child);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides hierarchy's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tconst stateAnimationDuration = \"stateAnimationDuration\"\n\t\t\tduration = hiddenState.get(stateAnimationDuration, this.get(stateAnimationDuration, 0));\n\t\t}\n\n\t\tconst stateAnimationEasing = \"stateAnimationEasing\";\n\t\tconst easing = hiddenState.get(stateAnimationEasing, this.get(stateAnimationEasing));\n\n\t\tconst children = dataItem.get(\"children\");\n\n\t\tif ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\n\t\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: 0, duration: duration, easing: easing }).waitForStop());\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.hide();\n\n\t\tif (children) {\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tpromises.push(this.hideDataItem(childDataItem));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows hierarchy's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\tconst children = dataItem.get(\"children\");\n\n\t\tif ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\n\t\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: dataItem.get(\"value\"), duration: duration, easing: easing }).waitForStop());\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.show();\n\n\t\tif (children) {\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tpromises.push(this.showDataItem(childDataItem));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Enables a disabled data item.\n\t *\n\t * @param  dataItem  Target data item\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic enableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, maxDepth?: number, depth?: number, duration?: number) {\n\n\t\tif (depth == null) {\n\t\t\tdepth = 0;\n\t\t}\n\n\t\tif (maxDepth == null) {\n\t\t\tmaxDepth = 1;\n\t\t}\n\n\t\tdataItem.set(\"disabled\", false);\n\t\tdataItem.get(\"node\").set(\"disabled\", false);\n\n\t\tif (!dataItem.isHidden()) {\n\t\t\tdataItem.get(\"node\").show(duration);\n\t\t}\n\n\t\tif (depth == 0) {\n\t\t\tconst upDepth = this.get(\"upDepth\", Infinity);\n\t\t\tlet parent = dataItem;\n\t\t\tlet count = 0;\n\n\t\t\twhile (parent !== undefined) {\n\t\t\t\tif (count > upDepth) {\n\t\t\t\t\tparent.get(\"node\").hide();\n\t\t\t\t}\n\t\t\t\tparent = parent.get(\"parent\");\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\n\t\tlet children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\tif (depth < maxDepth - 1) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tthis.enableDataItem(child, maxDepth, depth as number + 1, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (!child.isHidden()) {\n\t\t\t\t\t\tchild.get(\"node\").show(duration);\n\t\t\t\t\t\tchild.get(\"node\").states.applyAnimate(\"disabled\");\n\t\t\t\t\t\tchild.set(\"disabled\", true);\n\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Disables a data item.\n\t *\n\t * @param  dataItem  Target data item\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic disableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number) {\n\t\tdataItem.set(\"disabled\", true);\n\t\tlet children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\t$array.each(children, (child) => {\n\t\t\t\tthis.disableDataItem(child, duration);\n\t\t\t\tchild.get(\"node\").hide(duration);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _selectDataItem(dataItem?: DataItem<this[\"_dataItemSettings\"]>, downDepth?: number) {\n\t\tif (dataItem) {\n\t\t\tconst type = \"dataitemselected\";\n\t\t\tthis.events.dispatch(type, { type: type, target: this, dataItem: dataItem });\n\n\t\t\tlet maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\t\tif (downDepth == null) {\n\t\t\t\tdownDepth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\n\t\t\t}\n\n\t\t\tif (!this.inited) {\n\t\t\t\tdownDepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - topDepth);\n\t\t\t}\n\n\t\t\tthis._currentDownDepth = downDepth;\n\n\t\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\t\tlet currentDepth = hierarchyNode.depth;\n\n\t\t\tif (currentDepth + downDepth > maxDepth) {\n\t\t\t\tdownDepth = maxDepth - currentDepth;\n\t\t\t}\n\n\t\t\tif (currentDepth < topDepth) {\n\t\t\t\tdownDepth += topDepth - currentDepth;\n\t\t\t\tcurrentDepth = topDepth;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\n\t\t\tif (children && children.length > 0) {\n\t\t\t\tif (downDepth > 0) {\n\t\t\t\t\tthis.enableDataItem(dataItem, downDepth);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem.get(\"node\").show();\n\t\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\t\tchild.get(\"node\").hide();\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif (hierarchyNode.depth < topDepth) {\n\t\t\t\t\tdataItem.get(\"node\").hide(0);\n\t\t\t\t}\n\n\t\t\t\tif (this.get(\"singleBranchOnly\")) {\n\t\t\t\t\tthis._handleSingle(dataItem);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.enableDataItem(this.dataItems[0], downDepth, 0);\n\t\t\t}\n\n\t\t\tthis._zoom(dataItem);\n\t\t}\n\n\t}\n\n\tprotected _zoom(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t}\n\n\tprotected _handleSingle(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tif (parent) {\n\t\t\tconst children = parent.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (child != dataItem) {\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Selects specific data item.\n\t *\n\t * @param  dataItem  Target data item\n\t */\n\tpublic selectDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tconst maxDepth = this.getPrivate(\"maxDepth\", 1);\n\n\t\tif (this.get(\"selectedDataItem\") == dataItem) {\n\t\t\tif (parent) {\n\t\t\t\tthis.set(\"selectedDataItem\", parent);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet depth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\n\n\t\t\t\tif (this._currentDownDepth == depth) {\n\t\t\t\t\tdepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - this.get(\"topDepth\", 0));\n\t\t\t\t}\n\n\t\t\t\tthis._selectDataItem(dataItem, depth);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.set(\"selectedDataItem\", dataItem);\n\t\t}\n\t}\n\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction: (root: Root, series: Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?: number) {\n\t\tconst bullet = super._makeBullet(dataItem, bulletFunction, index);\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tif (sprite) {\n\t\t\t\tnode.children.push(sprite);\n\t\t\t\tnode.on(\"width\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t\tnode.on(\"height\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\treturn bullet;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tsprite.set(\"x\", node.width() * locationX);\n\t\t\tsprite.set(\"y\", node.height() * locationY);\n\t\t}\n\t}\n\n\t/**\n\t * Triggers hover on a series data item.\n\t *\n\t * @since 5.0.7\n\t * @param  dataItem  Target data item\n\t */\n\tpublic hoverDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tnode.hover();\n\t\t}\n\t}\n\n\t/**\n\t * Triggers un-hover on a series data item.\n\t *\n\t * @since 5.0.7\n\t * @param  dataItem  Target data item\n\t */\n\tpublic unhoverDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tnode.unhover();\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { LinkedHierarchy, ILinkedHierarchyDataItem } from \"./LinkedHierarchy\";\n\nimport { HierarchyNode, IHierarchyNodePrivate, IHierarchyNodeSettings } from \"./HierarchyNode\";\n\nimport * as $array from \"../../core/util/Array\";\n\nexport interface ILinkedHierarchyNodeSettings extends IHierarchyNodeSettings {\n}\n\nexport interface ILinkedHierarchyNodePrivate extends IHierarchyNodePrivate {\n}\n\n/**\n * A node class for [[LinkedHierarchy]].\n */\nexport class LinkedHierarchyNode extends HierarchyNode {\n\n\t/**\n\t * A series node belongs to.\n\t */\n\tdeclare public series: LinkedHierarchy | undefined;\n\n\tdeclare public _settings: ILinkedHierarchyNodeSettings;\n\tdeclare public _privateSettings: ILinkedHierarchyNodePrivate;\n\n\tpublic static className: string = \"LinkedHierarchyNode\";\n\tpublic static classNames: Array<string> = HierarchyNode.classNames.concat([LinkedHierarchyNode.className]);\n\n\tdeclare protected _dataItem: DataItem<ILinkedHierarchyDataItem> | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.states.create(\"disabled\", {});\n\t\tthis.states.create(\"hover\", {});\n\t\tthis.states.create(\"hoverDisabled\", {});\n\t}\n\n\n\tpublic _updateLinks(duration?: number) {\n\t\tconst dataItem = this.dataItem;\n\t\tif (dataItem) {\n\t\t\tlet links = (dataItem as DataItem<ILinkedHierarchyDataItem>).get(\"links\");\n\n\t\t\t$array.each(links, (link) => {\n\t\t\t\tlet source = link.get(\"source\")\n\t\t\t\tlet target = link.get(\"target\")\n\n\t\t\t\tif (source && target) {\n\t\t\t\t\tif (source.get(\"node\").isHidden() || target.get(\"node\").isHidden()) {\n\t\t\t\t\t\tlink.hide(duration);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlink.show(duration);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"disabled\")) {\n\t\t\tthis._updateLinks();\n\t\t}\n\t}\n\n\tprotected _onHide(duration?: number) {\n\t\tsuper._onHide(duration);\n\t\tthis._updateLinks(duration);\n\t}\n\n\tprotected _onShow(duration?: number) {\n\t\tsuper._onShow(duration);\n\t\tthis._updateLinks(duration);\n\t}\n}\n","import type { IHierarchyDataItem } from \"./Hierarchy\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\n\nexport interface IHierarchyLinkSettings extends IGraphicsSettings {\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Target node data item.\n\t */\n\ttarget?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Strength of the link.\n\t */\n\tstrength?: number;\n\n\t/**\n\t * Distance in pixels.\n\t */\n\tdistance?: number;\n\n}\n\nexport interface IHierarchyLinkPrivate extends IGraphicsPrivate {\n\td3Link:any;\n}\n\n/**\n * Draws a link between nodes in a hierarchy series.\n */\nexport class HierarchyLink extends Graphics {\n\tdeclare public _settings: IHierarchyLinkSettings;\n\tdeclare public _privateSettings: IHierarchyLinkPrivate;\n\n\tpublic static className: string = \"HierarchyLink\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([HierarchyLink.className]);\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this._clear) {\n\t\t\tlet source = this.get(\"source\");\n\t\t\tlet target = this.get(\"target\");\n\t\t\tif (source && target) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\tthis._display.moveTo(sourceNode.x(), sourceNode.y());\n\t\t\t\tthis._display.lineTo(targetNode.x(), targetNode.y());\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"source\")) {\n\t\t\tconst source = this.get(\"source\");\n\t\t\tif (source) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tsourceNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"target\")) {\n\t\t\tconst target = this.get(\"target\");\n\t\t\tif (target) {\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\ttargetNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type * as d3hierarchy from \"d3-hierarchy\";\n\nimport { Hierarchy, IHierarchySettings, IHierarchyDataItem, IHierarchyPrivate, IHierarchyEvents } from \"./Hierarchy\";\nimport { Container } from \"../../core/render/Container\";\nimport { LinkedHierarchyNode } from \"./LinkedHierarchyNode\";\nimport { HierarchyLink } from \"./HierarchyLink\";\nimport { Template } from \"../../core/util/Template\";\nimport { Circle } from \"../../core/render/Circle\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\n\n/**\n * @ignore\n */\nexport interface ILinkedHierarchyDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ILinkedHierarchyDataObject[],\n\tdataItem?: DataItem<ILinkedHierarchyDataItem>\n};\n\nexport interface ILinkedHierarchyDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * An array of child data items.\n\t */\n\tchildren: Array<DataItem<ILinkedHierarchyDataItem>>;\n\n\t/**\n\t * A data item of a parent node.\n\t */\n\tparent: DataItem<ILinkedHierarchyDataItem>;\n\n\t/**\n\t * A related node.\n\t */\n\tnode: LinkedHierarchyNode;\n\n\t/**\n\t * [[Circle]] element of the related node.\n\t */\n\tcircle: Circle;\n\n\t/**\n\t * [[Circle]] element of the related node, representing outer circle.\n\t */\n\touterCircle: Circle;\n\n\t/**\n\t * A [[HierarchyLink]] leading to parent node.\n\t */\n\tparentLink: HierarchyLink;\n\n\t/**\n\t * An [[HierarchyLink]] leading to parent node.\n\t */\n\tlinks: Array<HierarchyLink>;\n\n\t/**\n\t * An array of [[HierarchyLink]] objects leading to child nodes.\n\t */\n\tchildLinks: Array<HierarchyLink>;\n\n\t/**\n\t * An array of IDs of directly linked nodes.\n\t */\n\tlinkWith: Array<string>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyPointNode<ILinkedHierarchyDataObject>;\n\n}\n\nexport interface ILinkedHierarchySettings extends IHierarchySettings {\n\n\t/**\n\t * A field in data which holds IDs of nodes to link with.\n\t */\n\tlinkWithField?: string;\n\n}\n\nexport interface ILinkedHierarchyPrivate extends IHierarchyPrivate {\n}\n\nexport interface ILinkedHierarchyEvents extends IHierarchyEvents {\n}\n\n/**\n * A base class for linked hierarchy series.\n */\nexport abstract class LinkedHierarchy extends Hierarchy {\n\n\tpublic static className: string = \"LinkedHierarchy\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([LinkedHierarchy.className]);\n\n\tdeclare public _settings: ILinkedHierarchySettings;\n\tdeclare public _privateSettings: ILinkedHierarchyPrivate;\n\tdeclare public _dataItemSettings: ILinkedHierarchyDataItem;\n\tdeclare public _events: ILinkedHierarchyEvents;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"linkWith\", \"x\", \"y\");\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * A list of nodes in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<LinkedHierarchyNode>\n\t */\n\tpublic readonly nodes: ListTemplate<LinkedHierarchyNode> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => LinkedHierarchyNode._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"node\"]),\n\t\t\tx: this.width() / 2,\n\t\t\ty: this.height() / 2\n\t\t}, [this.nodes.template])\n\t);\n\n\t/**\n\t * A list of node circle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly circles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.circles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.circles.template])\n\t);\n\n\t/**\n\t * A list of node outer circle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly outerCircles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.outerCircles.template.get(\"themeTags\", []), [this._tag, \"outer\", \"shape\"])\n\t\t}, [this.outerCircles.template])\n\t);\n\n\t/**\n\t * A list of link elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<HierarchyLink>\n\t */\n\tpublic readonly links: ListTemplate<HierarchyLink> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => HierarchyLink._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.links.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"link\"])\n\t\t}, [this.links.template])\n\t);\n\n\t/**\n\t * A [[Container]] that link elements are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly linksContainer = this.children.moveValue(Container.new(this._root, {}), 0);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): LinkedHierarchyNode {\n\t\tconst node = super.makeNode(dataItem) as LinkedHierarchyNode;\n\n\t\tconst circle = node.children.moveValue(this.circles.make(), 0);\n\t\tthis.circles.push(circle);\n\t\tnode.setPrivate(\"tooltipTarget\", circle);\n\t\tdataItem.setRaw(\"circle\", circle);\n\n\t\tconst outerCircle = node.children.moveValue(this.outerCircles.make(), 0);\n\t\tthis.outerCircles.push(outerCircle);\n\t\tdataItem.setRaw(\"outerCircle\", outerCircle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\tcircle.on(\"radius\", () => {\n\t\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\t\tlabel.setAll({ maxWidth: d, maxHeight: d })\n\t\t\touterCircle.set(\"radius\", d / 2);\n\n\t\t\tthis._handleRadiusChange();\n\t\t})\n\n\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\tlabel.setAll({ maxWidth: d, maxHeight: d });\n\t\t\n\t\tcircle._setDataItem(dataItem);\n\t\touterCircle._setDataItem(dataItem);\n\n\t\treturn node;\n\t}\n\n\tpublic _handleRadiusChange() {\n\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tdataItem.setRaw(\"childLinks\", []);\n\t\tdataItem.setRaw(\"links\", []);\n\t\tsuper.processDataItem(dataItem);\n\t}\n\n\tprotected _processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._processDataItem(dataItem);\n\n\t\tconst parentDataItem = dataItem.get(\"parent\");\n\t\tif (parentDataItem && parentDataItem.get(\"depth\") >= this.get(\"topDepth\")) {\n\t\t\tconst link = this.linkDataItems(parentDataItem, dataItem);\n\t\t\tdataItem.setRaw(\"parentLink\", link);\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tthis.updateLinkWith(this.dataItems);\n\t\tnode._updateLinks(0);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLinkWith(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst linkWith = dataItem.get(\"linkWith\");\n\t\t\tif (linkWith) {\n\t\t\t\t$array.each(linkWith, (id) => {\n\t\t\t\t\tconst linkWithDataItem = this._getDataItemById(this.dataItems, id);\n\n\t\t\t\t\tif (linkWithDataItem) {\n\t\t\t\t\t\tthis.linkDataItems(dataItem, linkWithDataItem);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tthis.updateLinkWith(children);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _getPoint(hierarchyNode: this[\"_dataItemSettings\"][\"d3HierarchyNode\"]): IPoint {\n\t\treturn { x: hierarchyNode.x, y: hierarchyNode.y };\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst point = this._getPoint(hierarchyNode);\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: point.x, duration: duration, easing: easing });\n\t\tnode.animate({ key: \"y\", to: point.y, duration: duration, easing: easing });\n\n\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\tif (hierarchyChildren) {\n\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\tthis._updateNodes(hierarchyChild)\n\t\t\t})\n\t\t}\n\n\t\tconst fill = dataItem.get(\"fill\");\n\t\tconst circle = dataItem.get(\"circle\");\n\t\tconst children = dataItem.get(\"children\");\n\t\t\n\t\tif (circle) {\n\t\t\tcircle._setDefault(\"fill\", fill);\n\t\t\tcircle._setDefault(\"stroke\", fill);\n\t\t}\n\n\t\tconst outerCircle = dataItem.get(\"outerCircle\");\n\t\tif (outerCircle) {\n\t\t\touterCircle._setDefault(\"fill\", fill);\n\t\t\touterCircle._setDefault(\"stroke\", fill);\n\n\t\t\tif (!children || children.length == 0) {\n\t\t\t\touterCircle.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Link two data items with a link element.\n\t *\n\t * @param   source    Source node data item\n\t * @param   target    Target node data item\n\t * @param   strength  Link strength\n\t * @return            Link element\n\t */\n\tpublic linkDataItems(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>, strength?: number): HierarchyLink {\n\n\t\tlet link!: HierarchyLink;\n\n\t\tconst sourceLinks = source.get(\"links\");\n\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == target) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == source) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (!link) {\n\t\t\tlink = this.links.make();\n\t\t\tthis.links.push(link);\n\t\t\tthis.linksContainer.children.push(link);\n\t\t\tlink.set(\"source\", source);\n\t\t\tlink.set(\"target\", target);\n\t\t\tlink._setDataItem(source);\n\t\t\tlink.set(\"stroke\", source.get(\"fill\"));\n\t\t\tif (strength != null) {\n\t\t\t\tlink.set(\"strength\", strength)\n\t\t\t}\n\n\t\t\tsource.get(\"childLinks\").push(link);\n\n\t\t\t$array.move(source.get(\"links\"), link);\n\t\t\t$array.move(target.get(\"links\"), link);\n\n\t\t\tthis._processLink(link, source, target);\n\t\t}\n\n\t\treturn link;\n\t}\n\n\n\t/**\n\t * Unlink two linked data items.\n\t *\n\t * @param   source  Source node data item\n\t * @param   target  Target node data item\n\t */\n\tpublic unlinkDataItems(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tlet link!: HierarchyLink;\n\n\t\tconst sourceLinks = source.get(\"links\");\n\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk && lnk.get(\"target\") == target) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t\t$array.remove(sourceLinks, link);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk && lnk.get(\"target\") == source) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t\t$array.remove(targetLinks, link);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (link) {\n\t\t\tthis._disposeLink(link);\n\t\t}\n\n\t\tthis._handleUnlink();\n\t}\n\n\tprotected _handleUnlink() {\n\n\t}\n\n\tprotected _disposeLink(link: HierarchyLink) {\n\t\tthis.links.removeValue(link);\n\t\tlink.dispose();\n\t}\n\n\t/**\n\t * Returns `true` if two nodes are linked with each other.\n\t */\n\tpublic areLinked(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tconst sourceLinks = source.get(\"links\");\n\t\tlet linked = false;\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == target) {\n\t\t\t\t\tlinked = true;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == source) {\n\t\t\t\t\tlinked = true;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\treturn linked;\n\t}\n\n\tprotected _processLink(_link: HierarchyLink, _source: DataItem<this[\"_dataItemSettings\"]>, _target: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst links = dataItem.get(\"links\");\n\t\tif (links) {\n\t\t\t$array.each(links, (link) => {\n\t\t\t\tthis._disposeLink(link)\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Select a data item.\n\t * @param  dataItem  Data item\n\t */\n\tpublic selectDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\n\t\tif (!dataItem.get(\"disabled\")) {\n\t\t\tthis.set(\"selectedDataItem\", dataItem);\n\t\t\tthis._selectDataItem(dataItem);\n\t\t}\n\t\telse {\n\t\t\tif (parent) {\n\t\t\t\tthis.setRaw(\"selectedDataItem\", parent);\n\t\t\t\tconst type = \"dataitemselected\";\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, dataItem: parent });\n\t\t\t\tthis.disableDataItem(dataItem);\n\t\t\t}\n\t\t}\n\t}\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { Percent } from \"../../core/util/Percent\";\nimport type { LinkedHierarchyNode } from \"./LinkedHierarchyNode\";\nimport type { HierarchyLink } from \"./HierarchyLink\";\nimport type * as d3Hierarchy from \"d3-hierarchy\";\n\nimport { LinkedHierarchy, ILinkedHierarchySettings, ILinkedHierarchyDataItem, ILinkedHierarchyPrivate, ILinkedHierarchyEvents } from \"./LinkedHierarchy\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\nimport * as d3Force from \"d3-force\";\n\n/**\n * @ignore\n */\nexport interface IForceDirectedDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IForceDirectedDataObject[],\n\tdataItem?: DataItem<IForceDirectedDataItem>\n};\n\nexport interface IForceDirectedDataItem extends ILinkedHierarchyDataItem {\n\n\t/**\n\t * An array of data items of child nodes.\n\t */\n\tchildren: Array<DataItem<IForceDirectedDataItem>>;\n\n\t/**\n\t * Data item of a parent node.\n\t */\n\tparent: DataItem<IForceDirectedDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3ForceNode: d3Force.SimulationNodeDatum;\n\n\t/**\n\t * X coordinate.\n\t */\n\tx: number;\n\n\t/**\n\t * Y coordinate.\n\t */\n\ty: number;\n\n}\n\nexport interface IForceDirectedSettings extends ILinkedHierarchySettings {\n\n\t/**\n\t * Minimum gap in pixels between the nodes.\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) all nodes to the center of the\n\t * chart.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tcenterStrength?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) all nodes to each other.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default -15\n\t */\n\tmanyBodyStrength?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) nodes that are linked together\n\t * via `linkWithField`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tlinkWithStrength?: number | undefined;\n\n\t/**\n\t * Resistance acting agains node speed.\n\t *\n\t * The greater the value, the more \"sluggish\" the nodes will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tvelocityDecay?: number;\n\n\t/**\n\t * Length of how long initial force simulation would run in frames.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 500\n\t */\n\tinitialFrames?: number;\n\n\t/**\n\t * If set to a number will wait X number of frames before revealing\n\t * the tree.\n\t *\n\t * Can be used to hide initial animations where nodes settle into their\n\t * places.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 10\n\t */\n\tshowOnFrame?: number;\n\n\t/**\n\t * Smallest possible radius for a node circle.\n\t *\n\t * Can be a fixed pixel value or percent relative to chart size.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Sizing_nodes} for more info\n\t * @default 1%\n\t */\n\tminRadius?: number | Percent;\n\n\t/**\n\t * Biggest possible radius for a node circle.\n\t *\n\t * Can be a fixed pixel value or percent relative to chart size.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Sizing_nodes} for more info\n\t * @default 8%\n\t */\n\tmaxRadius?: number | Percent;\n\n\t/**\n\t * Field in data that holds X coordinate of the node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Fixed_nodes} for more info\n\t */\n\txField?: string;\n\n\t/**\n\t * Field in data that holds X coordinate of the node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Fixed_nodes} for more info\n\t */\n\tyField?: string;\n\n}\n\nexport interface IForceDirectedPrivate extends ILinkedHierarchyPrivate {\n}\n\nexport interface IForceDirectedEvents extends ILinkedHierarchyEvents {\n}\n\n/**\n * Creates a force-directed tree.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/} for more info\n * @important\n */\nexport class ForceDirected extends LinkedHierarchy {\n\n\tprotected _tag: string = \"forcedirected\";\n\n\t/**\n\t * @ignore\n\t */\n\tpublic readonly d3forceSimulation: d3Force.Simulation<{}, d3Force.SimulationLinkDatum<d3Force.SimulationNodeDatum>> = d3Force.forceSimulation();\n\n\t/**\n\t * @ignore\n\t */\n\tpublic readonly collisionForce: d3Force.ForceCollide<d3Force.SimulationNodeDatum> = d3Force.forceCollide(20);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic linkForce: d3Force.ForceLink<d3Force.SimulationNodeDatum, d3Force.SimulationLinkDatum<d3Force.SimulationNodeDatum>> = d3Force.forceLink();\n\n\tpublic static className: string = \"ForceDirected\";\n\tpublic static classNames: Array<string> = LinkedHierarchy.classNames.concat([ForceDirected.className]);\n\n\tdeclare public _settings: IForceDirectedSettings;\n\tdeclare public _privateSettings: IForceDirectedPrivate;\n\tdeclare public _dataItemSettings: IForceDirectedDataItem;\n\tdeclare public _events: IForceDirectedEvents;\n\n\tprotected _nodes: Array<any> = [];\n\tprotected _links: Array<any> = [];\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.d3forceSimulation.on(\"tick\", () => {\n\t\t\tthis._tick++;\n\t\t\tthis.updateNodePositions();\n\t\t});\n\t}\n\n\tprotected _tick: number = 0;\n\tprotected _nodesDirty: boolean = false;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\t\tif (this.isDirty(\"showOnFrame\")) {\n\t\t\tconst showOnFrame = this.get(\"showOnFrame\");\n\t\t\tif (showOnFrame > this._tick) {\n\t\t\t\tthis.nodesContainer.setPrivate(\"visible\", false);\n\t\t\t\tthis.linksContainer.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\n\t\tif (this.isDirty(\"velocityDecay\")) {\n\t\t\td3forceSimulation.velocityDecay(this.get(\"velocityDecay\", 0));\n\t\t}\n\n\t\tif (this.isDirty(\"initialFrames\")) {\n\t\t\td3forceSimulation.alphaDecay(1 - Math.pow(0.001, 1 / this.get(\"initialFrames\", 500)));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic restartSimulation(alpha: number): void {\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\tif (d3forceSimulation.alpha() < alpha) {\n\t\t\td3forceSimulation.alpha(alpha);\n\t\t\td3forceSimulation.restart();\n\t\t}\n\t}\n\n\tpublic _handleRadiusChange() {\n\t\tthis._updateForces();\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst d3ForceNode: any = { index: this._index, x: this.innerWidth() / 2, y: this.innerHeight() / 2, dataItem: dataItem };\n\t\tconst index = this._nodes.push(d3ForceNode) - 1;\n\t\td3ForceNode.index = index;\n\n\t\tthis.d3forceSimulation.nodes(this._nodes);\n\n\t\tdataItem.set(\"d3ForceNode\", d3ForceNode);\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.on(\"scale\", () => {\n\t\t\tthis._nodesDirty = true;\n\t\t\tthis.markDirty();\n\t\t})\n\n\t\tnode.events.on(\"dragged\", () => {\n\t\t\td3ForceNode.fx = node.x();\n\t\t\td3ForceNode.fy = node.y();\n\t\t\tthis._updateForces();\n\t\t})\n\n\t\tnode.events.on(\"dragstop\", () => {\n\t\t\tif (dataItem.get(\"x\") == null) {\n\t\t\t\td3ForceNode.fx = undefined;\n\t\t\t}\n\t\t\tif (dataItem.get(\"y\") == null) {\n\t\t\t\td3ForceNode.fy = undefined;\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _updateValues(d3HierarchyNode: d3Hierarchy.HierarchyNode<IForceDirectedDataObject>) {\n\t\tsuper._updateValues(d3HierarchyNode);\n\n\t\tthis._nodesDirty = true;\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\td3forceSimulation.force(\"collision\", this.collisionForce);\n\t\td3forceSimulation.nodes(this._nodes);\n\n\t\tthis.linkForce = d3Force.forceLink(this._links);\n\t\td3forceSimulation.force(\"link\", this.linkForce);\n\t}\n\n\tprotected _updateVisuals() {\n\t\tsuper._updateVisuals();\n\t\tthis.restartSimulation(1);\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\n\t\tif (this._sizeDirty) {\n\t\t\tlet w = Math.max(50, this.innerWidth());\n\t\t\tlet h = Math.max(50, this.innerHeight());\n\t\t\tlet pt = this.get(\"paddingTop\", 0);\n\t\t\tlet pl = this.get(\"paddingLeft\", 0);\n\n\t\t\tlet centerStrength = this.get(\"centerStrength\", 1);\n\n\t\t\td3forceSimulation.force(\"x\", d3Force.forceX().x(w / 2 + pl).strength(centerStrength * 100 / w));\n\t\t\td3forceSimulation.force(\"y\", d3Force.forceY().y(h / 2 + pt).strength(centerStrength * 100 / h));\n\t\t}\n\n\t\tif (this._nodesDirty) {\n\t\t\tthis._updateForces();\n\t\t}\n\t}\n\n\tpublic _updateForces() {\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\td3forceSimulation.force(\"manybody\", d3Force.forceManyBody().strength((d3node) => {\n\t\t\tlet dataItem = (d3node as any).dataItem;\n\t\t\tlet node = dataItem.get(\"node\") as LinkedHierarchyNode;\n\t\t\tlet circle = dataItem.get(\"circle\");\n\t\t\tlet manyBodyStrength = this.get(\"manyBodyStrength\", -15);\n\t\t\treturn circle.get(\"radius\", 1) * node.get(\"scale\", 1) * manyBodyStrength;\n\t\t}));\n\n\t\tthis.collisionForce.radius((d3node) => {\n\t\t\tlet dataItem = (d3node as any).dataItem;\n\t\t\tlet node = dataItem.get(\"node\") as LinkedHierarchyNode;\n\t\t\tlet circle = dataItem.get(\"circle\");\n\t\t\tlet outerCircle = dataItem.get(\"outerCircle\");\n\t\t\tlet radius = circle.get(\"radius\", 1);\n\n\t\t\tif (!outerCircle.isHidden()) {\n\t\t\t\tradius = radius * outerCircle.get(\"scale\", 1.1);\n\t\t\t}\n\n\t\t\tradius *= node.get(\"scale\", 1);\n\n\t\t\treturn radius + this.get(\"nodePadding\", 0);\n\t\t})\n\n\t\tthis.restartSimulation(1);\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._nodesDirty = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateNodePositions() {\n\t\tconst linkForce = this.linkForce;\n\t\tif (linkForce) {\n\t\t\tlinkForce.distance((linkDatum) => {\n\t\t\t\treturn this.getDistance(linkDatum)\n\t\t\t});\n\t\t\tlinkForce.strength((linkDatum) => {\n\t\t\t\treturn this.getStrength(linkDatum)\n\t\t\t});\n\t\t}\n\t\tif (this._tick == this.get(\"showOnFrame\")) {\n\t\t\tthis.nodesContainer.setPrivate(\"visible\", true);\n\t\t\tthis.linksContainer.setPrivate(\"visible\", true);\n\t\t}\n\n\t\tlet d3Nodes = this.d3forceSimulation.nodes();\n\n\t\t$array.each(d3Nodes, (d3Node: any) => {\n\t\t\tconst dataItem = d3Node.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tnode.set(\"x\", d3Node.x);\n\t\t\tnode.set(\"y\", d3Node.y);\n\t\t})\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLinkWith(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst linkWith = dataItem.get(\"linkWith\");\n\t\t\tif (linkWith) {\n\t\t\t\t$array.each(linkWith, (id) => {\n\t\t\t\t\tconst linkWithDataItem = this._getDataItemById(this.dataItems, id);\n\n\t\t\t\t\tif (linkWithDataItem) {\n\t\t\t\t\t\tthis.linkDataItems(dataItem, linkWithDataItem, this.get(\"linkWithStrength\"));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tthis.updateLinkWith(children);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected getDistance(linkDatum: any) {\n\t\tlet sourceDataItem: DataItem<this[\"_dataItemSettings\"]> = <DataItem<this[\"_dataItemSettings\"]>>linkDatum.sourceDataItem;\n\t\tlet targetDataItem: DataItem<this[\"_dataItemSettings\"]> = <DataItem<this[\"_dataItemSettings\"]>>linkDatum.targetDataItem;\n\n\t\tlet distance = 0;\n\n\t\tif (sourceDataItem && targetDataItem) {\n\n\t\t\tconst targetNode = targetDataItem.get(\"node\");\n\t\t\tif (targetNode.isHidden()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tlet link = linkDatum.link;\n\t\t\tif (link) {\n\t\t\t\tdistance = link.get(\"distance\", 1);\n\t\t\t}\n\n\t\t\tconst sourceNode = sourceDataItem.get(\"node\");\n\n\t\t\tif (targetNode.isHidden()) {\n\t\t\t\tdistance = 1;\n\t\t\t}\n\n\t\t\treturn (distance * (sourceDataItem.get(\"circle\").get(\"radius\", 1) * sourceNode.get(\"scale\", 1) + targetDataItem.get(\"circle\").get(\"radius\", 1) * targetNode.get(\"scale\", 1)));\n\t\t}\n\t\treturn distance;\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo description\n\t */\n\tprotected getStrength(linkDatum: any) {\n\t\tlet strength = 0;\n\n\t\tlet link = linkDatum.link;\n\t\tif (link) {\n\t\t\tstrength = link.get(\"strength\", 1);\n\t\t}\n\n\t\tconst targetDataItem = linkDatum.targetDataItem;\n\t\tstrength *= targetDataItem.get(\"node\").get(\"scale\");\n\n\t\treturn strength;\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\t\tthis._updateRadius(dataItem);\n\n\t\tconst x = dataItem.get(\"x\");\n\t\tconst y = dataItem.get(\"y\");\n\n\t\tconst d3Node = dataItem.get(\"d3ForceNode\");\n\n\t\tif (x != null) {\n\t\t\t(d3Node as any).fx = $utils.relativeToValue(x, this.innerWidth());\n\t\t}\n\n\t\tif (y != null) {\n\t\t\t(d3Node as any).fy = $utils.relativeToValue(y, this.innerHeight());\n\t\t}\n\t}\n\n\tprotected _updateRadius(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet size = (this.innerWidth() + this.innerHeight()) / 2;\n\n\t\tlet minRadius = $utils.relativeToValue(this.get(\"minRadius\", 1), size);\n\t\tlet maxRadius = $utils.relativeToValue(this.get(\"maxRadius\", 5), size);\n\n\t\tlet valueWorking = dataItem.get(\"sum\");\n\n\t\tlet radius = maxRadius;\n\n\t\tconst min = this.getPrivate(\"valueLow\", 0);\n\t\tconst max = this.getPrivate(\"valueHigh\", 0);\n\n\t\tif (max > 0) {\n\t\t\tradius = minRadius + (valueWorking - min) / (max - min) * (maxRadius - minRadius);\n\t\t}\n\n\t\tif (!$type.isNumber(radius)) {\n\t\t\tradius = minRadius;\n\t\t}\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tdataItem.get(\"circle\").animate({ key: \"radius\", to: radius, duration: duration, easing: easing });\n\t}\n\n\tprotected _processLink(link: HierarchyLink, source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst d3Link = { link: link, source: source.get(\"d3ForceNode\").index, target: target.get(\"d3ForceNode\").index, sourceDataItem: source, targetDataItem: target };\n\t\tthis._links.push(d3Link);\n\t\tlink.setPrivate(\"d3Link\", d3Link);\n\n\t\tthis.linkForce = d3Force.forceLink(this._links);\n\t\tthis.d3forceSimulation.force(\"link\", this.linkForce);\n\t\tthis.restartSimulation(0.5);\n\t}\n\n\tprotected _disposeLink(link: HierarchyLink) {\n\t\tsuper._disposeLink(link);\n\t\t$array.remove(this._links, link.getPrivate(\"d3Link\"));\n\t}\n\n\tprotected _handleUnlink() {\n\t\tthis.restartSimulation(0.5);\n\t}\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import {shuffle} from \"../array.js\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(Array.from(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import array from \"../array.js\";\nimport enclose from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {packEnclose} from \"./siblings.js\";\nimport {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { HierarchyNode } from \"./HierarchyNode\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyEvents } from \"./Hierarchy\";\nimport { Circle } from \"../../core/render/Circle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as d3hierarchy from \"d3-hierarchy\";\nimport * as $utils from \"../../core/util/Utils\";\n\n/**\n * @ignore\n */\nexport interface IPackDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IPackDataObject[],\n\tdataItem?: DataItem<IPackDataItem>\n};\n\nexport interface IPackDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * An array of data items of node's children.\n\t */\n\tchildren: Array<DataItem<IPackDataItem>>;\n\n\t/**\n\t * A data item of node's parent.\n\t */\n\tparent: DataItem<IPackDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyCircularNode<IPackDataObject>;\n\n\t/**\n\t * A [[Circle]] element of the node.\n\t */\n\tcircle: Circle;\n\n}\n\nexport interface IPackSettings extends IHierarchySettings {\n}\n\nexport interface IPackPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tscaleR?: number;\n\n}\n\nexport interface IPackEvents extends IHierarchyEvents {\n}\n\n/**\n * Builds a pack diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/sunburst/} for more info\n * @important\n */\nexport class Pack extends Hierarchy {\n\n\tdeclare public _settings: IPackSettings;\n\tdeclare public _privateSettings: IPackPrivate;\n\tdeclare public _dataItemSettings: IPackDataItem;\n\n\tprotected _tag: string = \"pack\";\n\n\tpublic static className: string = \"Pack\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Pack.className]);\n\n\tpublic _packLayout = d3hierarchy.pack();\n\tdeclare public _rootNode: d3hierarchy.HierarchyCircularNode<IPackDataObject> | undefined;\n\tpublic _packData: IPackDataObject | undefined;\n\n\t/**\n\t * A list of node circle elements in a [[Pack]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly circles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.circles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.circles.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleR\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"scaleR\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst packLayout = this._packLayout;\n\t\t\tpackLayout.size([this.innerWidth(), this.innerHeight()]);\n\t\t\tpackLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst circle = dataItem.get(\"circle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleR = this.getPrivate(\"scaleR\", 1);\n\n\t\tconst x = hierarchyNode.x * scaleR;\n\t\tconst y = hierarchyNode.y * scaleR;\n\t\tconst radius = hierarchyNode.r * scaleR;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y, duration: duration, easing: easing })\n\n\t\tif (circle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\tcircle.animate({ key: \"radius\", to: radius, duration: duration, easing: easing })\n\t\t\tcircle._setDefault(\"fill\", fill);\n\t\t\tcircle._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyCircularNode<IPackDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst circle = dataItem.get(\"circle\");\n\n\t\t\tconst scaleR = this.getPrivate(\"scaleR\", 1);\n\n\t\t\tconst x = hierarchyNode.x * scaleR;\n\t\t\tconst y = hierarchyNode.y * scaleR;\n\t\t\tconst radius = hierarchyNode.r * scaleR;\n\n\t\t\tnode.setAll({ x: x, y: y })\n\t\t\tcircle.set(\"radius\", radius);\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\n\t\tconst circle = node.children.moveValue(this.circles.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", circle);\n\t\tthis.circles.push(circle);\n\t\tdataItem.setRaw(\"circle\", circle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\tcircle.on(\"radius\", () => {\n\t\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\t\tlabel.setAll({ maxWidth: d, maxHeight: d });\n\t\t})\n\n\t\treturn node;\n\t}\n\n\tpublic _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tlet x = hierarchyNode.x;\n\t\tlet y = hierarchyNode.y;\n\t\tlet r = hierarchyNode.r;\n\n\t\tlet scaleR = Math.min(this.innerWidth(), this.innerHeight()) / (r * 2);\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tthis.animatePrivate({ key: \"scaleR\", to: scaleR, duration: duration, easing: easing });\n\n\t\tconst nodesContainer = this.nodesContainer;\n\t\tnodesContainer.animate({ key: \"x\", from: nodesContainer.x(), to: this.width() / 2 - x * scaleR, duration: duration, easing: easing });\n\t\tnodesContainer.animate({ key: \"y\", from: nodesContainer.y(), to: this.height() / 2 - y * scaleR, duration: duration, easing: easing });\n\t}\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import type { HierarchyNode } from \"./HierarchyNode\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyDataObject } from \"./Hierarchy\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\n/**\n * @ignore\n */\nexport interface IPartitionDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IPartitionDataObject[],\n\tdataItem?: DataItem<IPartitionDataItem>\n};\n\nexport interface IPartitionDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * Data items of child nodes.\n\t */\n\tchildren: Array<DataItem<IPartitionDataItem>>;\n\n\t/**\n\t * Data it of a parent node.\n\t */\n\tparent: DataItem<IPartitionDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyRectangularNode<IHierarchyDataObject>;\n\n\t/**\n\t * A [[RoundedRectangle]] element of a node.\n\t */\n\trectangle: RoundedRectangle;\n\n}\n\nexport interface IPartitionSettings extends IHierarchySettings {\n\n\t/**\n\t * Gap between nodes in pixels.\n\t *\n\t * @default 0\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * Orientation of the diagram.\n\t *\n\t * @default \"vertical\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n}\n\nexport interface IPartitionPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n\n}\n\n/**\n * Partition series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/partition/} for more info\n */\nexport class Partition extends Hierarchy {\n\n\tdeclare public _settings: IPartitionSettings;\n\tdeclare public _privateSettings: IPartitionPrivate;\n\tdeclare public _dataItemSettings: IPartitionDataItem;\n\n\tprotected _tag: string = \"partition\";\n\n\tpublic static className: string = \"Partition\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Partition.className]);\n\n\t/**\n\t * A list of node rectangle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.rectangles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.rectangles.template])\n\t);\n\n\tpublic _partitionLayout = d3hierarchy.partition();\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<IPartitionDataObject> | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"partition\", this._settings.orientation || \"vertical\"]);\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleX\", 1);\n\t\tthis.setPrivate(\"scaleY\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"nodePadding\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"scaleX\") || this.isPrivateDirty(\"scaleY\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst partitionLayout = this._partitionLayout;\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\t[w, h] = [h, w];\n\t\t\t}\n\n\t\t\tpartitionLayout.size([w, h]);\n\n\t\t\tconst nodePadding = this.get(\"nodePadding\");\n\n\t\t\tif ($type.isNumber(nodePadding)) {\n\t\t\t\tpartitionLayout.padding(nodePadding);\n\t\t\t}\n\n\n\t\t\tpartitionLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\tlet x0, x1, y0, y1: number;\n\n\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\tx0 = hierarchyNode.y0 * scaleX;\n\t\t\tx1 = hierarchyNode.y1 * scaleX;\n\t\t\ty0 = hierarchyNode.x0 * scaleY;\n\t\t\ty1 = hierarchyNode.x1 * scaleY;\n\t\t}\n\t\telse {\n\t\t\tx0 = hierarchyNode.x0 * scaleX;\n\t\t\tx1 = hierarchyNode.x1 * scaleX;\n\t\t\ty0 = hierarchyNode.y0 * scaleY;\n\t\t\ty1 = hierarchyNode.y1 * scaleY;\n\t\t}\n\t\tlet w = x1 - x0;\n\t\tlet h = y1 - y0;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\n\t\tif (rectangle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\t\t\t\n\t\t\trectangle.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\t\trectangle.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\t\t\trectangle._setDefault(\"fill\", fill);\n\t\t\trectangle._setDefault(\"stroke\", fill);\t\t\t\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<IPartitionDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\t\tlet x0, x1, y0, y1: number;\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\tx0 = hierarchyNode.y0 * scaleX;\n\t\t\t\tx1 = hierarchyNode.y1 * scaleX;\n\t\t\t\ty0 = hierarchyNode.x0 * scaleY;\n\t\t\t\ty1 = hierarchyNode.x1 * scaleY;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx0 = hierarchyNode.x0 * scaleX;\n\t\t\t\tx1 = hierarchyNode.x1 * scaleX;\n\t\t\t\ty0 = hierarchyNode.y0 * scaleY;\n\t\t\t\ty1 = hierarchyNode.y1 * scaleY;\n\t\t\t}\n\n\t\t\tconst w = x1 - x0;\n\t\t\tconst h = y1 - y0;\n\n\t\t\tnode.setAll({ x: x0, y: y0, width: w, height: h });\n\t\t\trectangle.setAll({ width: w, height: h });\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\t\tthis._makeNode(dataItem, node);\n\t\treturn node;\n\t}\n\n\tprotected _makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, node: HierarchyNode) {\n\t\tconst rectangle = node.children.moveValue(this.rectangles.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", rectangle);\n\t\tdataItem.setRaw(\"rectangle\", rectangle);\n\t\trectangle._setDataItem(dataItem);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\trectangle.on(\"width\", () => {\n\t\t\tlabel.set(\"maxWidth\", rectangle.width());\n\t\t})\n\n\t\trectangle.on(\"height\", () => {\n\t\t\tlabel.set(\"maxHeight\", rectangle.height());\n\t\t})\n\t}\n\n\tprotected _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet x0 = 0;\n\t\tlet x1 = 0;\n\t\tlet y0 = 0;\n\t\tlet y1 = 0;\n\n\t\tconst upDepth = this.get(\"upDepth\", 0) + 1;\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\tconst width = this.innerWidth();\n\t\tconst height = this.innerHeight();\n\n\t\tconst maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\tconst levelHeight = height / (maxDepth + 1);\n\t\tconst levelWidth = width / (maxDepth + 1);\n\t\tconst initialDepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - topDepth);\n\n\t\tlet downDepth = this._currentDownDepth;\n\t\tif (downDepth == null) {\n\t\t\tdownDepth = this.get(\"downDepth\", 1);\n\t\t}\n\n\t\tif (dataItem) {\n\t\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\t\tlet currentDepth = hierarchyNode.depth;\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\tx0 = hierarchyNode.y0;\n\t\t\t\tx1 = hierarchyNode.y1;\n\n\t\t\t\ty0 = hierarchyNode.x0;\n\t\t\t\ty1 = hierarchyNode.x1;\n\n\t\t\t\tx0 = x1 - levelWidth * upDepth;\n\t\t\t\tx1 = x0 + levelWidth * (downDepth + 1);\n\n\t\t\t\tif (currentDepth < topDepth) {\n\t\t\t\t\ty0 = 0;\n\t\t\t\t\ty1 = height;\n\t\t\t\t\tx0 = levelWidth * topDepth;\n\t\t\t\t\tx1 = x0 + levelWidth * initialDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx0 = hierarchyNode.x0;\n\t\t\t\tx1 = hierarchyNode.x1;\n\n\t\t\t\ty0 = hierarchyNode.y0;\n\t\t\t\ty1 = hierarchyNode.y1;\n\n\t\t\t\ty0 = y1 - levelHeight * upDepth;\n\t\t\t\ty1 = y0 + levelHeight * (downDepth + 1);\n\n\t\t\t\tif (currentDepth < topDepth) {\n\t\t\t\t\tx0 = 0;\n\t\t\t\t\tx1 = width;\n\t\t\t\t\ty0 = levelHeight * topDepth;\n\t\t\t\t\ty1 = y0 + levelHeight * initialDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet scaleX = width / (x1 - x0);\n\t\tlet scaleY = height / (y1 - y0);\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\n\t\tthis.nodesContainer.animate({ key: \"x\", to: -x0 * scaleX, duration: duration, easing: easing });\n\t\tthis.nodesContainer.animate({ key: \"y\", to: -y0 * scaleY, duration: duration, easing: easing });\n\t}\n}\n","import type { Root } from \"../../core/Root\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { HierarchyNode } from \"./HierarchyNode\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { Series } from \"../../core/render/Series\";\n\nimport { Partition, IPartitionPrivate, IPartitionSettings, IPartitionDataItem } from \"./Partition\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Slice } from \"../../core/render/Slice\";\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\nimport { Percent, p100, p50 } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as d3hierarchy from \"d3-hierarchy\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\n\n/**\n * @ignore\n */\nexport interface ISunburstDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ISunburstDataObject[],\n\tdataItem?: DataItem<ISunburstDataItem>\n};\n\nexport interface ISunburstDataItem extends IPartitionDataItem {\n\n\t/**\n\t * Data items of child nodes.\n\t */\n\tchildren: Array<DataItem<ISunburstDataItem>>;\n\n\t/**\n\t * Data item of a parent node.\n\t */\n\tparent: DataItem<ISunburstDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3PartitionNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject>;\n\n\t/**\n\t * A [[Slice]] element of the node.\n\t */\n\tslice: Slice;\n\n}\n\nexport interface ISunburstSettings extends IPartitionSettings {\n\n\t/**\n\t * Start angle of the series.\n\t *\n\t * @default -90\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * End angle of the series.\n\t *\n\t * @default 270\n\t */\n\tendAngle?: number;\n\n\t/**\n\t * Inner radius of the suburst pie.\n\t *\n\t * Setting to negative number will mean pixels from outer radius.\n\t *\n\t * @default 0\n\t */\n\tinnerRadius?: number | Percent;\n\n\t/**\n\t * Outer radius of the sunburst pie.\n\t *\n\t * @default 100%\n\t */\n\tradius?: number | Percent;\n\n}\n\nexport interface ISunburstPrivate extends IPartitionPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tdr: number;\n\n\t/**\n\t * @ignore\n\t */\n\tdx: number;\n\n\t/**\n\t * @ignore\n\t */\n\tinnerRadius: number;\n\n\t/**\n\t * @ignore\n\t */\n\thierarchySize?: number;\n\n}\n\n/**\n * Builds a sunburst diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/sunburst/} for more info\n * @important\n */\nexport class Sunburst extends Partition {\n\n\tdeclare public _settings: ISunburstSettings;\n\tdeclare public _privateSettings: ISunburstPrivate;\n\tdeclare public _dataItemSettings: ISunburstDataItem;\n\n\tprotected _tag: string = \"sunburst\";\n\n\tpublic static className: string = \"Sunburst\";\n\tpublic static classNames: Array<string> = Partition.classNames.concat([Sunburst.className]);\n\n\tpublic _partitionLayout = d3hierarchy.partition();\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject> | undefined;\n\n\t/**\n\t * A list of node slice elements in a [[Sunburst]] chart.\n\t *\n\t * @default new ListTemplate<Slice>\n\t */\n\tpublic readonly slices: ListTemplate<Slice> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Slice._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.slices.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\", \"shape\"])\n\t\t}, [this.slices.template])\n\t);\n\n\t/**\n\t * A list of label elements in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<RadialLabel>\n\t */\n\tpublic readonly labels: ListTemplate<RadialLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RadialLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [this._tag])\n\t\t}, [this.labels.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.nodesContainer.setAll({ x: p50, y: p50 });\n\t\tthis.setPrivateRaw(\"dx\", 0);\n\t\tthis.setPrivateRaw(\"dr\", 0);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"dr\") || this.isPrivateDirty(\"dx\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst partitionLayout = this._partitionLayout;\n\n\t\t\tlet bounds = $math.getArcBounds(0, 0, this.get(\"startAngle\", 0), this.get(\"endAngle\", 360), 1);\n\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\n\t\t\tconst wr = w / (bounds.right - bounds.left);\n\t\t\tconst hr = h / (bounds.bottom - bounds.top);\n\n\t\t\tlet s = Math.min(wr, hr);\n\n\t\t\tlet r = $utils.relativeToValue(this.get(\"radius\", p100), s);\n\t\t\tlet ir = $utils.relativeToValue(this.get(\"innerRadius\", 0), r);\n\n\t\t\tif (ir < 0) {\n\t\t\t\tir = r + ir;\n\t\t\t}\n\n\t\t\ts = r - ir;\n\n\t\t\tthis.setPrivateRaw(\"innerRadius\", ir);\n\t\t\tthis.setPrivateRaw(\"hierarchySize\", s);\n\n\t\t\tpartitionLayout.size([s, s]);\n\n\t\t\tthis.nodesContainer.setAll({\n\t\t\t\tdy: -r * (bounds.bottom + bounds.top) / 2, dx: -r * (bounds.right + bounds.left) / 2\n\t\t\t})\n\n\t\t\tconst nodePadding = this.get(\"nodePadding\");\n\n\t\t\tif ($type.isNumber(nodePadding)) {\n\t\t\t\tpartitionLayout.padding(nodePadding);\n\t\t\t}\n\n\n\t\t\tpartitionLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\tconst node = dataItem.get(\"node\");\n\n\t\tnode.setAll({ x: 0, y: 0 });\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\t\tconst dr = this.getPrivate(\"dr\", 0);\n\t\tconst dx = this.getPrivate(\"dx\", 0);\n\n\t\tconst x0 = hierarchyNode.x0 * scaleX + dx;\n\t\tconst x1 = hierarchyNode.x1 * scaleX + dx;\n\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\tconst ir = this.getPrivate(\"innerRadius\");\n\t\tconst hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tif (slice) {\n\t\t\tconst startAngle = this.get(\"startAngle\", -90);\n\t\t\tconst endAngle = this.get(\"endAngle\", 270);\n\n\t\t\tconst sliceStartAngle = startAngle + x0 / hs * (endAngle - startAngle);\n\t\t\tconst arc = startAngle + x1 / hs * (endAngle - startAngle) - sliceStartAngle;\n\n\t\t\tlet sliceInnerRadius = ir + y0;\n\t\t\tlet sliceRadius = ir + y1;\n\n\t\t\tsliceInnerRadius -= dr;\n\t\t\tsliceRadius -= dr;\n\n\t\t\tsliceRadius = Math.max(0, sliceRadius);\n\t\t\tsliceInnerRadius = Math.max(0, sliceInnerRadius);\n\n\t\t\tslice.animate({ key: \"radius\", to: sliceRadius, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"innerRadius\", to: sliceInnerRadius, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"startAngle\", to: sliceStartAngle, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"arc\", to: arc, duration: duration, easing: easing })\n\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\tslice._setDefault(\"fill\", fill);\n\t\t\tslice._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\t\t\tconst dr = this.getPrivate(\"dr\", 0);\n\t\t\tconst dx = this.getPrivate(\"dx\", 0);\n\n\t\t\tconst x0 = hierarchyNode.x0 * scaleX + dx;\n\t\t\tconst x1 = hierarchyNode.x1 * scaleX + dx;\n\t\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\t\tconst ir = this.getPrivate(\"innerRadius\");\n\t\t\tconst hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\tif (slice) {\n\t\t\t\tconst startAngle = this.get(\"startAngle\", -90);\n\t\t\t\tconst endAngle = this.get(\"endAngle\", 270);\n\n\t\t\t\tconst sliceStartAngle = startAngle + x0 / hs * (endAngle - startAngle);\n\t\t\t\tconst arc = startAngle + x1 / hs * (endAngle - startAngle) - sliceStartAngle;\n\n\t\t\t\tlet sliceInnerRadius = ir + y0;\n\t\t\t\tlet sliceRadius = ir + y1;\n\n\t\t\t\tsliceInnerRadius -= dr;\n\t\t\t\tsliceRadius -= dr;\n\n\t\t\t\tsliceRadius = Math.max(0, sliceRadius);\n\t\t\t\tsliceInnerRadius = Math.max(0, sliceInnerRadius);\n\n\t\t\t\tslice.setAll({ radius: sliceRadius, innerRadius: sliceInnerRadius, startAngle: sliceStartAngle, arc: arc });\n\t\t\t}\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, node: HierarchyNode) {\n\t\tconst slice = node.children.moveValue(this.slices.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", slice);\n\t\tdataItem.setRaw(\"slice\", slice);\n\n\t\tslice._setDataItem(dataItem);\n\n\t\tslice.on(\"arc\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t\tslice.on(\"innerRadius\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t\tslice.on(\"radius\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t}\n\n\tprotected _updateLabel(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tconst label = dataItem.get(\"label\") as RadialLabel;\n\n\t\tif (slice && label) {\n\t\t\tlet innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\tlet radius = slice.get(\"radius\", 0);\n\t\t\tlet angle = slice.get(\"startAngle\", 0);\n\t\t\tlet arc = Math.abs(slice.get(\"arc\", 0));\n\t\t\tlet labelAngle = angle + arc / 2;\n\n\t\t\tlet maxWidth = radius - innerRadius;\n\t\t\tlet maxHeight = radius * arc * $math.RADIANS;\t\t\t\n\n\t\t\tif (innerRadius == 0 && arc >= 360) {\n\t\t\t\tradius = 1;\n\t\t\t\tlabelAngle = 0;\n\t\t\t}\n\n\t\t\tlabel.set(\"labelAngle\", labelAngle);\n\n\t\t\tlabel.setPrivate(\"radius\", radius);\n\t\t\tlabel.setPrivate(\"innerRadius\", innerRadius);\n\n\n\t\t\tif (arc >= 360) {\n\t\t\t\tmaxWidth *= 2;\n\t\t\t\tmaxHeight = maxWidth;\n\t\t\t}\n\t\t\tlabel.setAll({\n\t\t\t\tmaxHeight: maxHeight,\n\t\t\t\tmaxWidth: maxWidth\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet x0 = 0;\n\t\tlet x1 = 0;\n\t\tlet hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tlet upDepth = this.get(\"upDepth\", 0);\n\t\tlet topDepth = this.get(\"topDepth\", 0);\n\t\tlet currentDepth = hierarchyNode.depth;\n\t\tlet maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\tlet downDepth = this._currentDownDepth;\n\n\t\tif (downDepth == null) {\n\t\t\tdownDepth = this.get(\"downDepth\", 1);\n\t\t}\n\n\t\tconst levelHeight = hs / (maxDepth + 1);\n\n\t\tif (currentDepth < topDepth) {\n\t\t\tcurrentDepth = topDepth;\n\t\t}\n\n\t\tif (currentDepth - upDepth < 0) {\n\t\t\tupDepth = currentDepth;\n\t\t}\n\n\t\tx0 = hierarchyNode.x0;\n\t\tx1 = hierarchyNode.x1;\n\n\t\tlet scaleDepth = (downDepth + upDepth + 1);\n\n\t\tif (scaleDepth > maxDepth - topDepth + 1) {\n\t\t\tscaleDepth = maxDepth - topDepth + 1;\n\t\t}\n\n\t\tlet scaleX = hs / (x1 - x0);\n\t\tlet scaleY = hs / (levelHeight * scaleDepth);\n\n\t\tlet dr = Math.max(currentDepth - upDepth, topDepth) * levelHeight * scaleY;\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tlet dx = -x0 * scaleX\n\n\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"dr\", to: dr, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"dx\", to: dx, duration: duration, easing: easing });\n\t}\n\n\n\tprotected _handleSingle(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tif (parent) {\n\t\t\tconst children = parent.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (child != dataItem) {\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t\tchild.get(\"node\").hide();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis._handleSingle(parent);\n\t\t}\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\n\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\tconst arc = slice.get(\"arc\", 0);\n\t\t\tconst angle = slice.get(\"startAngle\", 0) + slice.get(\"arc\", 0) * locationX;\n\t\t\tconst innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\tconst radius = innerRadius + (slice.get(\"radius\", 0) - innerRadius) * locationY;\n\n\t\t\tlet x = $math.cos(angle) * radius;\n\t\t\tlet y = $math.sin(angle) * radius;\n\n\t\t\tif ($math.round(arc, 5) === 360 && $math.round(innerRadius, 2) === 0) {\n\t\t\t\tx = 0;\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\tsprite.set(\"x\", x);\n\t\t\tsprite.set(\"y\", y);\n\t\t}\n\t}\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction: (root: Root, series: Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?: number) {\n\t\tconst bullet = super._makeBullet(dataItem, bulletFunction, index);\n\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst slice = dataItem.get(\"slice\");\n\n\t\t\tif (sprite && slice) {\n\t\t\t\tslice.on(\"arc\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\n\t\t\t\tslice.on(\"radius\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\treturn bullet;\n\t\t}\n\t}\n}\n","import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { LinkedHierarchy, ILinkedHierarchyPrivate, ILinkedHierarchySettings, ILinkedHierarchyDataItem, ILinkedHierarchyEvents } from \"./LinkedHierarchy\";\n\nimport * as d3hierarchy from \"d3-hierarchy\";\n\nexport interface ITreeDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ITreeDataObject[],\n\tdataItem?: DataItem<ITreeDataItem>\n};\n\nexport interface ITreeDataItem extends ILinkedHierarchyDataItem {\n\n\t/**\n\t * An array of children data items.\n\t */\n\tchildren: Array<DataItem<ITreeDataItem>>;\n\n\t/**\n\t * Parent data item.\n\t * @type {DataItem<ITreeDataItem>}\n\t */\n\tparent: DataItem<ITreeDataItem>;\n\n}\n\nexport interface ITreeSettings extends ILinkedHierarchySettings {\n\n\t/**\n\t * Orientation of the diagram.\n\t *\n\t * @default \"vertical\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n}\n\nexport interface ITreePrivate extends ILinkedHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n}\n\nexport interface ITreeEvents extends ILinkedHierarchyEvents {\n}\n\n/**\n * Displays a tree diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/tree/} for more info\n * @important\n */\nexport class Tree extends LinkedHierarchy {\n\n\tdeclare public _settings: ITreeSettings;\n\tdeclare public _privateSettings: ITreePrivate;\n\tdeclare public _dataItemSettings: ITreeDataItem;\n\n\tprotected _tag: string = \"tree\";\n\n\tpublic static className: string = \"Tree\";\n\tpublic static classNames: Array<string> = LinkedHierarchy.classNames.concat([Tree.className]);\n\n\tpublic _hierarchyLayout = d3hierarchy.tree();\n\tdeclare public _rootNode: d3hierarchy.HierarchyCircularNode<ITreeDataObject> | undefined;\n\tpublic _packData: ITreeDataObject | undefined;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst layout = this._hierarchyLayout;\n\n\t\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\t\tlayout.size([this.innerWidth(), this.innerHeight()]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlayout.size([this.innerHeight(), this.innerWidth()]);\n\t\t\t}\n\n\t\t\tlayout(this._rootNode);\n\t\t}\n\n\t\tsuper._updateVisuals();\n\t}\n\n\tprotected _getPoint(hierarchyNode: this[\"_dataItemSettings\"][\"d3HierarchyNode\"]): IPoint {\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\treturn { x: hierarchyNode.x, y: hierarchyNode.y };\n\t\t}\n\t\telse {\n\t\t\treturn { x: hierarchyNode.y, y: hierarchyNode.x };\n\t\t}\n\t}\n\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport {required} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice.js\";\nimport slice from \"./slice.js\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import type { HierarchyNode } from \"./HierarchyNode\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyDataObject } from \"./Hierarchy\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\nexport interface ITreemapDataObject { name?: string, value?: number, children?: ITreemapDataObject[], dataItem?: DataItem<ITreemapDataItem> };\n\nexport interface ITreemapDataItem extends IHierarchyDataItem {\n\tchildren: Array<DataItem<ITreemapDataItem>>;\n\tparent: DataItem<ITreemapDataItem>;\n\td3HierarchyNode: d3hierarchy.HierarchyRectangularNode<IHierarchyDataObject>;\n\trectangle: RoundedRectangle;\n}\n\nexport interface ITreemapSettings extends IHierarchySettings {\n\n\t/**\n\t * Gap between nodes. In pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingInner?: number;\n\n\t/**\n\t * Gap between nodes and outer edge of the chart. In pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingOuter?: number;\n\n\t/**\n\t * Gap between nodes and top edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingTop?: number;\n\n\t/**\n\t * Gap between nodes and bottomedge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingBottom?: number;\n\n\t/**\n\t * Gap between nodes and left edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingLeft?: number;\n\n\t/**\n\t * Gap between nodes and bottom edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingRight?: number;\n\n\t/**\n\t * An algorithm to use when laying out node rectangles.\n\t *\n\t * @see {@link }\n\t * @default \"squarify\"\n\t */\n\tlayoutAlgorithm?: \"binary\" | \"squarify\" | \"slice\" | \"dice\" | \"sliceDice\";\n\n}\n\nexport interface ITreemapPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n\n}\n\n/**\n * Treemap series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/} for more info\n */\nexport class Treemap extends Hierarchy {\n\n\tdeclare public _settings: ITreemapSettings;\n\tdeclare public _privateSettings: ITreemapPrivate;\n\tdeclare public _dataItemSettings: ITreemapDataItem;\n\n\tprotected _tag: string = \"treemap\";\n\n\tpublic static className: string = \"Treemap\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Treemap.className]);\n\n\tpublic readonly rectangleTemplate: Template<RoundedRectangle> = Template.new({});\n\n\tpublic _treemapLayout = d3hierarchy.treemap().tile(d3hierarchy.treemapSquarify);\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<ITreemapDataObject> | undefined;\n\n\t/**\n\t * A list of node rectangle elements in a [[Treemap]] chart.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.rectangles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.rectangles.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleX\", 1);\n\t\tthis.setPrivate(\"scaleY\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"layoutAlgorithm\")) {\n\t\t\tlet algorithm;\n\n\t\t\tswitch (this.get(\"layoutAlgorithm\")) {\n\t\t\t\tcase \"squarify\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSquarify;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"binary\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapBinary;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"slice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSlice;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"dice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapDice;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"sliceDice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSliceDice;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (algorithm) {\n\t\t\t\tthis._treemapLayout = d3hierarchy.treemap().tile(algorithm);\n\t\t\t}\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"nodePaddingRight\") || this.isDirty(\"nodePaddingLeft\") || this.isDirty(\"nodePaddingTop\") || this.isDirty(\"nodePaddingBottom\") || this.isDirty(\"nodePaddingOuter\") || this.isDirty(\"nodePaddingInner\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"scaleX\") || this.isPrivateDirty(\"scaleY\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst treemapLayout = this._treemapLayout;\n\t\t\ttreemapLayout.size([this.innerWidth(), this.innerHeight()]);\n\n\t\t\tconst paddingLeft = this.get(\"nodePaddingLeft\");\n\t\t\tconst paddingRight = this.get(\"nodePaddingRight\");\n\t\t\tconst paddingTop = this.get(\"nodePaddingTop\");\n\t\t\tconst paddingBottom = this.get(\"nodePaddingBottom\");\n\t\t\tconst paddingInner = this.get(\"nodePaddingInner\");\n\t\t\tconst paddingOuter = this.get(\"nodePaddingOuter\");\n\t\t\tif ($type.isNumber(paddingLeft)) {\n\t\t\t\ttreemapLayout.paddingLeft(paddingLeft);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingRight)) {\n\t\t\t\ttreemapLayout.paddingRight(paddingRight);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingTop)) {\n\t\t\t\ttreemapLayout.paddingTop(paddingTop);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingBottom)) {\n\t\t\t\ttreemapLayout.paddingBottom(paddingBottom);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingInner)) {\n\t\t\t\ttreemapLayout.paddingInner(paddingInner);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingOuter)) {\n\t\t\t\ttreemapLayout.paddingOuter(paddingOuter);\n\t\t\t}\n\n\t\t\ttreemapLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\tconst x0 = hierarchyNode.x0 * scaleX;\n\t\tconst x1 = hierarchyNode.x1 * scaleX;\n\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\tconst w = x1 - x0;\n\t\tconst h = y1 - y0;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y0, duration: duration, easing: easing })\n\n\t\tnode.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\n\t\tif (rectangle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\trectangle.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\t\trectangle.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\t\t\trectangle._setDefault(\"fill\", fill);\n\t\t\trectangle._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<ITreemapDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\t\tconst x0 = hierarchyNode.x0 * scaleX;\n\t\t\tconst x1 = hierarchyNode.x1 * scaleX;\n\t\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\t\tconst w = x1 - x0;\n\t\t\tconst h = y1 - y0;\n\n\t\t\tnode.setAll({ x: x0, y: y0, width: w, height: h });\n\t\t\trectangle.setAll({ width: w, height: h });\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\n\t\tconst rectangle = node.children.moveValue(this.rectangles.make(), 0);\n\n\t\tnode.setPrivate(\"tooltipTarget\", rectangle);\n\t\tdataItem.setRaw(\"rectangle\", rectangle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\trectangle.on(\"width\", () => {\n\t\t\tlabel.set(\"maxWidth\", rectangle.width());\n\t\t})\n\n\t\trectangle.on(\"height\", () => {\n\t\t\tlabel.set(\"maxHeight\", rectangle.height());\n\t\t})\n\n\t\treturn node;\n\t}\n\n\tpublic _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst nodePaddingOuter = this.get(\"nodePaddingOuter\", 0);\n\n\t\tlet x0 = hierarchyNode.x0 + nodePaddingOuter;\n\t\tlet x1 = hierarchyNode.x1 - nodePaddingOuter;\n\n\t\tlet y0 = hierarchyNode.y0 + nodePaddingOuter;\n\t\tlet y1 = hierarchyNode.y1 - nodePaddingOuter;\n\n\t\tlet scaleX = (this.innerWidth() - nodePaddingOuter * 2) / (x1 - x0);\n\t\tlet scaleY = (this.innerHeight() - nodePaddingOuter * 2) / (y1 - y0);\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\n\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\n\t\tthis.nodesContainer.animate({ key: \"x\", to: nodePaddingOuter - x0 * scaleX, duration: duration, easing: easing });\n\t\tthis.nodesContainer.animate({ key: \"y\", to: nodePaddingOuter - y0 * scaleY, duration: duration, easing: easing });\n\t}\n}\n","import * as m from \"./../../dist/es2015/hierarchy.js\";\nexport const am5hierarchy = m;"],"sourceRoot":""}